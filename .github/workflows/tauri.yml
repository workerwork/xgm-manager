name: 'Publish Tauri App'

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      # Linux 依赖
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      # 设置 Node.js
      - name: Setup Node.js (with Yarn cache)
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Install frontend dependencies
        run: yarn install --frozen-lockfile

      # 设置 Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # 缓存 Rust 依赖
      - name: Cache Rust crates
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      # 提取版本（Linux/macOS）
      - name: Extract version (Unix)
        if: runner.os != 'Windows'
        id: version
        shell: bash
        run: |
          version=$(grep '"version":' src-tauri/tauri.conf.json | head -1 | cut -d '"' -f4)
          echo "version=$version" >> $GITHUB_OUTPUT

      # 提取版本（Windows）
      - name: Extract version (Windows)
        if: runner.os == 'Windows'
        id: version
        shell: pwsh
        run: |
          $content = Get-Content src-tauri/tauri.conf.json -Raw
          $json = $content | ConvertFrom-Json
          echo "version=$($json.version)" >> $env:GITHUB_OUTPUT

      # 构建并发布（tauri-action）
      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0.5
        with:
          runner: 'yarn'
          workingDirectory: '.'
          args: ${{ matrix.args }}
          release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 手动发布 GitHub Release（包括产物上传）
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: app-v${{ steps.version.outputs.version }}
          name: "App v${{ steps.version.outputs.version }}"
          body: "See the assets to download this version and install."
          draft: true
          prerelease: false
          files: |
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/target/release/bundle/**/*.app
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
