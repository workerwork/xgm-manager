name: 'Publish Tauri App'

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      # 1. 获取代码
      - uses: actions/checkout@v4

      # 2. Ubuntu 系统依赖（仅 Linux）
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      # 3. Node.js + Yarn 缓存
      - name: Setup Node.js (with Yarn cache)
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      # 4. 安装前端依赖
      - name: Install frontend dependencies
        run: yarn install --frozen-lockfile

      # 5. 安装 Rust toolchain
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # 6. 缓存 Rust crates 与构建产物
      - name: Cache Rust crates
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      # 7. 构建 Tauri 应用
      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0.5
        with:
          runner: 'yarn'
          workingDirectory: '.'
          args: ${{ matrix.args }}
          release: true
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ 8. 上传构建产物到 Release
      - name: Upload Tauri bundles to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/target/release/bundle/**/*.app
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ 9. 可选：上传产物为 artifact（便于调试下载）
      - name: Upload bundle as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-bundle-${{ matrix.platform }}
          path: src-tauri/target/release/bundle
