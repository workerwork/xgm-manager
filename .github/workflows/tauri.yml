name: Build and Release Tauri App

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest
    outputs:
      tag: ${{ steps.create_tag.outputs.tag }}  # 定义job输出变量

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: npm install

      - name: Build Tauri App
        run: npm run tauri build

      - name: Create Git Tag
        id: create_tag
        run: |
          TAG=v$(date +'%Y%m%d%H%M%S')
          git tag -a $TAG -m "Release $TAG"
          git push origin $TAG
          echo "tag=$TAG" >> $GITHUB_OUTPUT  # 将tag设置为步骤输出
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package Build Artifacts
        run: |
          mkdir -p dist
          cp -R src-tauri/target/release/bundle/macos/xgm-manager.app dist/
          cp -R src-tauri/target/release/bundle/share/create-dmg dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录和标签

      - name: Fetch tags
        run: git fetch --tags --force  # 强制获取所有标签

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: tauri-build
          path: ./downloaded-artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build.outputs.tag }}  # 正确引用build job的输出变量
          files: ./downloaded-artifacts/**/*.{dmg,exe,AppImage}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}