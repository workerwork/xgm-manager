name: Build & Release Tauri App

on:
  push:
    branches: [ 'main' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish-tauri:
    # 并行三平台
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest   # Apple Silicon + Intel 会自动双构
            targets: [ 'universal-apple-darwin' ]
          - platform: windows-latest
            targets: [ 'x86_64-pc-windows-msvc' ]
          - platform: ubuntu-latest
            targets: [ 'x86_64-unknown-linux-gnu' ]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 18 (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Publish Tauri App
        uses: tauri-apps/tauri-action@v0.5
        with:
          # 要构建的目标，Action 会自动为每个平台安装对应 Rust target
          runner: 'npm'
          workingDirectory: '.'      # 若你的 Tauri 在子目录，改为 'src-tauri'
          targets: ${{ toJson(matrix.targets) }}
          # 版本来源：package.json version 或者手动指定
          tag: ${{ github.ref_name }}  # 例如 'v1.2.3'；或改为 package.json 自动读取
          release: true               # 自动创建/更新 GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 可选：Windows/macOS 签名私钥
          # TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          # TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
