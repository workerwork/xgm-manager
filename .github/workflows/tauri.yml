name: Build and Release Tauri App (Multi-Platform)

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            tauri-target: macos
            artifact-path: src-tauri/target/release/bundle/macos/*.{app,dmg}
          - os: windows-latest
            tauri-target: windows
            artifact-path: src-tauri/target/release/bundle/msi/*.msi
          - os: ubuntu-latest
            tauri-target: linux
            artifact-path: src-tauri/target/release/bundle/appimage/*.AppImage
    outputs:
      tag: ${{ steps.create_tag.outputs.tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Rust (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      - name: Setup Rust (macOS/Linux)
        if: matrix.os != 'windows-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libssl-dev

      - name: Install dependencies
        run: npm install

      - name: Build Tauri App
        run: npm run tauri build -- --target ${{ matrix.tauri-target }}

      - name: Create Git Tag (Only on macOS)
        if: matrix.os == 'macos-latest'
        id: create_tag
        run: |
          TAG=v$(date +'%Y%m%d%H%M%S')
          git tag -a $TAG -m "Release $TAG"
          git push origin $TAG
          echo "tag=$TAG" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package Artifacts
        run: |
          mkdir -p dist/${{ matrix.tauri-target }}
          cp ${{ matrix.artifact-path }} dist/${{ matrix.tauri-target }}/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-${{ matrix.tauri-target }}
          path: dist/${{ matrix.tauri-target }}/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags --force

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build.outputs.tag }}
          files: |
            downloaded-artifacts/tauri-build-macos/**/*
            downloaded-artifacts/tauri-build-windows/**/*
            downloaded-artifacts/tauri-build-linux/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}